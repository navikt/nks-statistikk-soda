apiVersion: v1
kind: ConfigMap
metadata:
  name: soda-checks
  namespace: nks-statistikk
data:
  oppgavestatistikk.yaml: |
    checks for nks_oppgave_dag_hist:
      - UpdatedOk > 0:
          name: "Sjekker om gårsdagens data er på plass"
          UpdatedOk query: |
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM nks_oppgave_dag_hist
            WHERE dato = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)

    checks for innsyn_oppgave_dag_hist:
      - UpdatedOk > 0:
          name: "Sjekker om gårsdagens data er på plass"
          UpdatedOk query: |
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM innsyn_oppgave_dag_hist
            WHERE dato = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)

  boost_data.yaml: |
    checks for boost_chat_hour_raw:
      - UpdatedOk > 0:
          name: "Sjekker om gårsdagens data er på plass"
          UpdatedOk query: |
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM boost_chat_hour_raw
            WHERE DATE(period) = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)
      - duplicate_count(period) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

    checks for boost_chat_human_transfer_day_raw:
      - UpdatedOk > 0:
          name: "Sjekker om gårsdagens data er på plass"
          UpdatedOk query: |
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM boost_chat_human_transfer_day_raw
            WHERE period = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)
      - duplicate_count(period, transferred_to_human) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

    checks for boost_chat_intents_day_raw:
      - UpdatedOk > 0:
          name: "Sjekker om gårsdagens data er på plass"
          UpdatedOk query: |
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM boost_chat_intents_day_raw
            WHERE period = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)
      - UnknownRoot < 5:
          name: "Sjekker om det er mange manglende root intents"
          UnknownRoot query: |
            SELECT count(*)
            FROM boost_chat_intents_day_raw i
            LEFT JOIN root_intent_mapping r
            ON i.intent_title = r.intent
            WHERE period = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)
            AND r.root_intent is NULL
      - duplicate_count(period, id) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

  sf_chat_data.yaml: |
    checks for chat_enhet:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
             SELECT
              CASE
               WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
               WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
               ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
             END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM chat_enhet
            CROSS JOIN date_to_check
            WHERE date = date_to_check.check_date
      - failed rows:
          name: "Sjekker om tabellen inneholder duplikater"
          fail query: |
            with duplicated_records as (
              select
                date, `interval`, queue, authentication_status, language, unit, count(*)
              from chat_enhet
              group by date, `interval`, queue, authentication_status, language, unit
              having count(*) > 1
            )
            select
              q.*
            from chat_enhet q
            join duplicated_records dup
              on q.date = dup.date
            and q.interval = dup.interval
            and q.queue = dup.queue
            and q.authentication_status = dup.authentication_status
            and q.language = dup.language
            and q.unit = dup.unit

    checks for chat_kanalstatistikk:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
             SELECT
              CASE
               WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
               WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
               ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
             END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM chat_kanalstatistikk
            CROSS JOIN date_to_check
            WHERE date = date_to_check.check_date
      - failed rows:
          name: "Sjekker om tabellen inneholder duplikater"
          fail query: |
            with duplicated_records as (
              select
                date, `interval`, queue, authentication_status, language, count(*)
              from chat_kanalstatistikk
              group by date, `interval`, queue, authentication_status, language
              having count(*) > 1
            )
            select
              q.*
            from chat_kanalstatistikk q
            join duplicated_records dup
              on q.date = dup.date
            and q.interval = dup.interval
            and q.queue = dup.queue
            and q.authentication_status = dup.authentication_status
            and q.language = dup.language

    checks for chat_concurrency:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
             SELECT
              CASE
               WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
               WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
               ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
             END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM chat_concurrency
            CROSS JOIN date_to_check
            WHERE date = date_to_check.check_date
      - duplicate_count(date, department) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

    checks for live_chat_transcript:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
             SELECT
              CASE
               WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
               WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
               ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
             END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM live_chat_transcript
            CROSS JOIN date_to_check
            WHERE date = date_to_check.check_date
      - duplicate_count(id) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

  sf_sto_data.yaml: |
    checks for sto_enhet:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
             SELECT
              CASE
               WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
               WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
               ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
             END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM sto_enhet
            CROSS JOIN date_to_check
            WHERE date = date_to_check.check_date
      - failed rows:
          name: "Sjekker om tabellen inneholder duplikater"
          fail query: |
            with duplicated_records as (
              select
                date, queue, category, `interval`, unit, count(*)
              from sto_enhet
              group by date, queue, category, `interval`, unit
              having count(*) > 1
            )
            select
              q.*
            from sto_enhet q
            join duplicated_records dup
              on q.date = dup.date
            and q.queue = dup.queue
            and q.category = dup.category
            and q.interval = dup.interval
            and q.unit = dup.unit

    checks for sto_kanalstatistikk:
      - UpdatedOk > 0:
          name: "Sjekker om gårsdagens data er på plass"
          UpdatedOk query: |
            SELECT 
            IF(COUNT(1) > 0, 1, 0)
            FROM sto_kanalstatistikk
            WHERE date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)
      - failed rows:
          name: "Sjekker om tabellen inneholder duplikater"
          fail query: |
            with duplicated_records as (
              select
                date, intervall, queue, category, count(*)
              from sto_kanalstatistikk
              group by date, intervall, queue, category
              having count(*) > 1
            )
            select
              q.*
            from sto_kanalstatistikk q
            join duplicated_records dup
              on q.date = dup.date
            and q.intervall = dup.intervall
            and q.queue = dup.queue
            and q.category = dup.category

    checks for case_milestone:
      - UpdatedOk > 0:
          name: "Sjekker om gårsdagens data er på plass"
          UpdatedOk query: |
            SELECT 
            IF(COUNT(1) > 0, 1, 0) 
            FROM case_milestone
            WHERE DATE(start_date) = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)
      - duplicate_count(id) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

    checks for sto_beholdning:
      - freshness(dato_tid) < 1d:
          name: "Sjekker om gårsdagens data er på plass"
          
    checks for user:
      - freshness(last_til_bq_ts) < 1d: 
          name: "Sjekker om gårsdagens data er på plass"

  sf_kunnskapsbase.yaml: |
    checks for artikkelvisninger_daglig_snapshot:
      - UpdatedOk > 0:
          name: "Sjekker om gårsdagens data er på plass"
          UpdatedOk query: |
            SELECT 
            IF(COUNT(1) > 0, 1, 0) 
            FROM artikkelvisninger_daglig_snapshot
            WHERE Date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)
      - duplicate_count(KnowledgeArticleId, Date) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

    checks for kunnskapsartikler:
      - UpdatedOk > 0:
          name: "Sjekk om oppdatert i dag hvis i går var en hverdag. Ellers sjekk om oppdatert lørdag."
          UpdatedOk query: |
            WITH date_to_check AS (
              SELECT
                CASE
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Monday
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Sunday
                  ELSE CURRENT_DATE() -- Other days
                END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM kunnskapsartikler
            CROSS JOIN date_to_check
            WHERE DATE(load_to_bq_ts) = date_to_check.check_date
      - failed rows:
          name: "Sjekker om tabellen inneholder duplikater"
          fail query: |
            with duplicated_records as (
              SELECT KnowledgeArticleId, VersionNumber, count(*) 
              FROM kunnskapsartikler
              where PublishStatus <> 'Deleted'
              group by KnowledgeArticleId, VersionNumber 
              having count(*) > 1
            )
            select
              q.*
            from kunnskapsartikler q
            join duplicated_records dup
              on q.KnowledgeArticleId = dup.KnowledgeArticleId
            and q.VersionNumber = dup.VersionNumber
            where q.PublishStatus <> 'Deleted'

  stillingsregistrering.yaml: |
    checks for stilling_annonser_agg_dag:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
              SELECT
                CASE
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
                  ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
                END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM stilling_annonser_agg_dag
            CROSS JOIN date_to_check
            WHERE dato = date_to_check.check_date
      - duplicate_count(dato) = 0:
          name: "Sjekker om tabellen inneholder duplikater" 

    checks for stilling_behandlinger_agg_dag:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
              SELECT
                CASE
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
                  ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
                END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM stilling_behandlinger_agg_dag
            CROSS JOIN date_to_check
            WHERE dato = date_to_check.check_date
      - duplicate_count(dato, starttidspunkt) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

    checks for stilling_beholdning:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
              SELECT
                CASE
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
                  ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
                END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM stilling_beholdning
            CROSS JOIN date_to_check
            WHERE DATE(last_updated_ts) = date_to_check.check_date

  samtalereferat_data.yaml: |
    checks for topp_frekvens_intradag:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
              SELECT
                CASE
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
                  ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
                END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM topp_frekvens_intradag
            CROSS JOIN date_to_check
            WHERE dato = date_to_check.check_date
      - failed rows:
          name: "Sjekker om tabellen inneholder duplikater"
          fail query: |
            with duplicated_records as (
              SELECT dato, temagruppe, topp_frekvens_ord, count(*) 
              FROM topp_frekvens_intradag
              group by dato, temagruppe, topp_frekvens_ord
              having count(*) > 1
            )
            select
              q.*
            from topp_frekvens_intradag q
            join duplicated_records dup
              on q.dato = dup.dato
            and q.temagruppe = dup.temagruppe
            and q.topp_frekvens_ord = dup.topp_frekvens_ord

    checks for topp_trend_intradag:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
              SELECT
                CASE
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
                  ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
                END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM topp_trend_intradag
            CROSS JOIN date_to_check
            WHERE dato = date_to_check.check_date
      - failed rows:
          name: "Sjekker om tabellen inneholder duplikater"
          fail query: |
            with duplicated_records as (
              SELECT dato, temagruppe, topp_trending_ord, count(*) 
              FROM topp_trend_intradag
              group by dato, temagruppe, topp_trending_ord
              having count(*) > 1
            )
            select
              q.*
            from topp_trend_intradag q
            join duplicated_records dup
              on q.dato = dup.dato
            and q.temagruppe = dup.temagruppe
            and q.topp_trending_ord = dup.topp_trending_ord

    checks for alle_nks_referater:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
              SELECT
                CASE
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
                  ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
                END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM alle_nks_referater
            CROSS JOIN date_to_check
            WHERE DATE(crm_registered_datetime_formula__c) = date_to_check.check_date
      - duplicate_count(id) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

  tastevalg_agg_mnd.yaml: |
    checks for andre_familiehenvendelser:
      - UpdatedOk > 0:
          name: "Sjekk om oppdatert i dag hvis i går var en hverdag. Ellers sjekk om oppdatert lørdag."
          UpdatedOk query: |
           WITH date_to_check AS (
            SELECT
              CASE
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Monday
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Sunday
                ELSE CURRENT_DATE() -- Other days
              END AS check_date
          )
          SELECT
          IF(COUNT(1) > 0, 1, 0)
          FROM andre_familiehenvendelser
          CROSS JOIN date_to_check
          WHERE DATE(sist_oppdatert_tidspunkt) = date_to_check.check_date
      - duplicate_count(aar, maaned) = 0:
          name: "Sjekker om tabellen inneholder duplikater" 

    checks for arbeidsavklaringspenger:
      - UpdatedOk > 0:
          name: "Sjekk om oppdatert i dag hvis i går var en hverdag. Ellers sjekk om oppdatert lørdag."
          UpdatedOk query: |
           WITH date_to_check AS (
            SELECT
              CASE
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Monday
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Sunday
                ELSE CURRENT_DATE() -- Other days
              END AS check_date
          )
          SELECT
          IF(COUNT(1) > 0, 1, 0)
          FROM arbeidsavklaringspenger
          CROSS JOIN date_to_check
          WHERE DATE(sist_oppdatert_tidspunkt) = date_to_check.check_date
      - duplicate_count(aar, maaned) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

    checks for barnebidrag:
      - UpdatedOk > 0:
          name: "Sjekk om oppdatert i dag hvis i går var en hverdag. Ellers sjekk om oppdatert lørdag."
          UpdatedOk query: |
           WITH date_to_check AS (
            SELECT
              CASE
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Monday
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Sunday
                ELSE CURRENT_DATE() -- Other days
              END AS check_date
          ) 
          SELECT
          IF(COUNT(1) > 0, 1, 0)
          FROM barnebidrag
          CROSS JOIN date_to_check
          WHERE DATE(sist_oppdatert_tidspunkt) = date_to_check.check_date
      - duplicate_count(aar, maaned) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

    checks for barnebidrag_undermeny:
      - UpdatedOk > 0:
          name: "Sjekk om oppdatert i dag hvis i går var en hverdag. Ellers sjekk om oppdatert lørdag."
          UpdatedOk query: |
           WITH date_to_check AS (
            SELECT
              CASE
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Monday
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Sunday
                ELSE CURRENT_DATE() -- Other days
              END AS check_date
          )
          SELECT
          IF(COUNT(1) > 0, 1, 0)
          FROM barnebidrag_undermeny
          CROSS JOIN date_to_check
          WHERE DATE(sist_oppdatert_tidspunkt) = date_to_check.check_date

    checks for foreldrepenger:
      - UpdatedOk > 0:
          name: "Sjekk om oppdatert i dag hvis i går var en hverdag. Ellers sjekk om oppdatert lørdag."
          UpdatedOk query: |
           WITH date_to_check AS (
            SELECT
              CASE
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Monday
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Sunday
                ELSE CURRENT_DATE() -- Other days
              END AS check_date
          )
          SELECT
          IF(COUNT(1) > 0, 1, 0)
          FROM foreldrepenger
          CROSS JOIN date_to_check
          WHERE DATE(sist_oppdatert_tidspunkt) = date_to_check.check_date
      - duplicate_count(aar, maaned) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

    checks for jobbsoker:
      - UpdatedOk > 0:
          name: "Sjekk om oppdatert i dag hvis i går var en hverdag. Ellers sjekk om oppdatert lørdag."
          UpdatedOk query: |
           WITH date_to_check AS (
            SELECT
              CASE
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Monday
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Sunday
                ELSE CURRENT_DATE() -- Other days
              END AS check_date
          )
          SELECT
          IF(COUNT(1) > 0, 1, 0)
          FROM jobbsoker
          CROSS JOIN date_to_check
          WHERE DATE(sist_oppdatert_tidspunkt) = date_to_check.check_date
      - duplicate_count(aar, maaned) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

    checks for pleiepenger:
      - UpdatedOk > 0:
          name: "Sjekk om oppdatert i dag hvis i går var en hverdag. Ellers sjekk om oppdatert lørdag."
          UpdatedOk query: |
           WITH date_to_check AS (
            SELECT
              CASE
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Monday
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Sunday
                ELSE CURRENT_DATE() -- Other days
              END AS check_date
          )
          SELECT
          IF(COUNT(1) > 0, 1, 0)
          FROM pleiepenger
          CROSS JOIN date_to_check
          WHERE DATE(sist_oppdatert_tidspunkt) = date_to_check.check_date
      - duplicate_count(aar, maaned) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

    checks for sykepenger:
      - UpdatedOk > 0:
          name: "Sjekk om oppdatert i dag hvis i går var en hverdag. Ellers sjekk om oppdatert lørdag."
          UpdatedOk query: |
           WITH date_to_check AS (
            SELECT
              CASE
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Monday
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Sunday
                ELSE CURRENT_DATE() -- Other days
              END AS check_date
          )
          SELECT
          IF(COUNT(1) > 0, 1, 0)
          FROM sykepenger
          CROSS JOIN date_to_check
          WHERE DATE(sist_oppdatert_tidspunkt) = date_to_check.check_date
      - duplicate_count(aar, maaned) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

    checks for uforetrygd:
      - UpdatedOk > 0:
          name: "Sjekk om oppdatert i dag hvis i går var en hverdag. Ellers sjekk om oppdatert lørdag."
          UpdatedOk query: |
           WITH date_to_check AS (
            SELECT
              CASE
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Monday
                WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Sunday
                ELSE CURRENT_DATE() -- Other days
              END AS check_date
          )
          
          SELECT
          IF(COUNT(1) > 0, 1, 0)
          FROM uforetrygd
          CROSS JOIN date_to_check
          WHERE DATE(sist_oppdatert_tidspunkt) = date_to_check.check_date
      - duplicate_count(aar, maaned) = 0:
          name: "Sjekker om tabellen inneholder duplikater"

  tastevalg_agg_dag.yaml: |
    checks for besvarte_per_fagmelding:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
              SELECT
                CASE
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
                  ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
                END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM besvarte_per_fagmelding
            CROSS JOIN date_to_check
            WHERE dato = date_to_check.check_date
      - duplicate_count(dato, fagmelding) = 0:
          name: "Sjekker om tabellen inneholder duplikater" 

    checks for menyhendelser:
      - UpdatedOk > 0:
          name: "Sjekk om data fra i går eksisterer hvis i går var en hverdag. Ellers sjekk data fra fredag."
          UpdatedOk query: |
            WITH date_to_check AS (
              SELECT
                CASE
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 2 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY) -- Monday
                  WHEN EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) = 1 THEN DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) -- Sunday
                  ELSE DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- Other days
                END AS check_date
            )
            SELECT
            IF(COUNT(1) > 0, 1, 0)
            FROM menyhendelser
            CROSS JOIN date_to_check
            WHERE dato = date_to_check.check_date
      - failed rows:
          name: "Sjekker om tabellen inneholder duplikater"
          fail query: |
            with duplicated_records as (
              SELECT dato, menu_key, menu_choice, count(*) 
              FROM menyhendelser
              group by dato, menu_key, menu_choice
              having count(*) > 1
            )
            select
              q.*
            from menyhendelser q
            join duplicated_records dup
              on q.dato = dup.dato
            and q.menu_key = dup.menu_key
            and q.menu_choice = dup.menu_choice
